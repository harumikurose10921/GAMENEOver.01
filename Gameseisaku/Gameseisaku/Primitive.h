
/*!
*@brief プリミティブ。
*/
#ifndef _PRIMITIVE_H_
#define _PRIMITIVE_H_

#include "IndexBuffer.h"
#include "VertexBuffer.h"
#include<d3d9.h>
/*!
* @brief　プリミティブ。
*/
class Primitive {
public:
	/*!
	*@brief プリミティブタイプ。
	*/
	enum EType {
		eTriangleList,
		eTriangleStrip,
		etypeNum,
	};
public:
	/*!
	* @brief コンストラクタ。
	*/
	Primitive();
	/*!
	* @brief	デストラクタ。
	*/
	~Primitive();
	/*!
	*@brief	プリミティブの作成。
	*@param[in]	primitiveType		プリミティブタイプ。
	*@param[in]	numVertex			頂点数
	*@param[in]	vertexStride		頂点ストライド
	*@param[in]	vertexLayout		頂点レイアウト。EVertexFormatの論理和を渡す。
	*@param[in]	pSrcVertexBuffer	ソース頂点バッファ。
	*@param[in]	numIndex			インデックスの数
	*@param[in]	indexFormat			インデックスバッファのフォーマット。
	*@param[in]	pSrcIndexBuffer		ソースインデックスバッファ。
	*/
	void Create(
		EType 					primitiveType,
		int 					numVertex,
		int 					vertexStride,
		const D3DVERTEXELEMENT9* vertexLayout,
		void*					pSrcVertexBuffer,
		int 					numIndex,
		D3DFORMAT				indexFormat,
		void*					pSrcIndexbuffer
	);
	/*!
	* @brief	リリース。
	*/
	void Release();
	/*!
	* @brief	頂点バッファの取得。
	*/
	VertexBuffer* GetVertexBuffer()
	{
		return &m_vertexBuffer;
	}
	/*!
	* @brief	インデックスバッファの取得。
	*/
	IndexBuffer*  GetIndexBuffer()
	{
		return &m_indexBuffer;
	}
	/*!
	* @brief	D3DPRIMITIVETYPEを取得。
	*/
	D3DPRIMITIVETYPE GetD3DPrimitiveType() const
	{
		return m_d3dPrimitiveType;
	}
	/*!
	* @brief	頂点数を取得。
	*/
	int GetNumVertex() const
	{
		return m_numVertex;
	}
	/*!
	* @brief	ポリゴン数を取得。
	*/
	int GetNumPolygon() const
	{
		return m_numPolygon;
	}
	/*!
	* @brief	頂点定義を取得。
	*/
	IDirect3DVertexDeclaration9* GetVertexDecl()
	{
		return m_vertexBuffer.GetVertexDecl();
	}
private:
	int					m_numVertex;		//!<頂点数。
	int					m_vertexStride;		//!<頂点ストライド。
	int					m_numIndex;			//!<インデックス数。
	int					m_numPolygon;		//!<ポリゴンの数。
	VertexBuffer		m_vertexBuffer;		//!<頂点バッファ。
	IndexBuffer		m_indexBuffer;		//!<インデックスバッファ。
	EType				m_type;				//!<プリミティブタイプ。
	D3DPRIMITIVETYPE	m_d3dPrimitiveType;	//!<D3DPRIMITIVETYPE。
};

#endif //_PRIMIRIVE_H_